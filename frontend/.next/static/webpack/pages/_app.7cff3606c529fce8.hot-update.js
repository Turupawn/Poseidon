"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "./src/lib/constants.ts":
/*!******************************!*\
  !*** ./src/lib/constants.ts ***!
  \******************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   COMPANY_NAME: function() { return /* binding */ COMPANY_NAME; },\n/* harmony export */   COMPANY_URL: function() { return /* binding */ COMPANY_URL; },\n/* harmony export */   GITHUB_URL: function() { return /* binding */ GITHUB_URL; },\n/* harmony export */   MULTICALL_ABI: function() { return /* binding */ MULTICALL_ABI; },\n/* harmony export */   MULTICALL_ABI_ETHERS: function() { return /* binding */ MULTICALL_ABI_ETHERS; },\n/* harmony export */   MULTICALL_ABI_VIEM: function() { return /* binding */ MULTICALL_ABI_VIEM; },\n/* harmony export */   MULTICALL_ADDRESS: function() { return /* binding */ MULTICALL_ADDRESS; },\n/* harmony export */   MULTICALL_SOLIDITY_INTERFACE: function() { return /* binding */ MULTICALL_SOLIDITY_INTERFACE; },\n/* harmony export */   SITE_DESCRIPTION: function() { return /* binding */ SITE_DESCRIPTION; },\n/* harmony export */   SITE_NAME: function() { return /* binding */ SITE_NAME; },\n/* harmony export */   TWITTER_URL: function() { return /* binding */ TWITTER_URL; }\n/* harmony export */ });\nconst SITE_NAME = \"poseidon-lib\";\nconst SITE_DESCRIPTION = \"The ZK-friendly hashing deployment.\";\nconst COMPANY_NAME = \"FilosofiaCodigo\";\nconst COMPANY_URL = \"https://twitter.com/FilosofiaCodigo\";\nconst GITHUB_URL = \"https://github.com/Turupawn/poseidon-lib\";\nconst TWITTER_URL = \"https://twitter.com/FilosofiaCodigo\";\nconst MULTICALL_ADDRESS = \"0x7eaE9c24323C8101C9B798319a4131d71B5af7fF\";\nconst MULTICALL_ABI = [\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256[2]\",\n                \"name\": \"inputs\",\n                \"type\": \"uint256[2]\"\n            }\n        ],\n        \"name\": \"poseidon\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"output\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    }\n];\nconst MULTICALL_ABI_VIEM = '[\\n  \"struct Call { address target; bytes callData; }\",\\n  \"struct Call3 { address target; bool allowFailure; bytes callData; }\",\\n  \"struct Call3Value { address target; bool allowFailure; uint256 value; bytes callData; }\",\\n  \"struct Result { bool success; bytes returnData; }\",\\n  \"function aggregate(Call[] calldata calls) public payable returns (uint256 blockNumber, bytes[] memory returnData)\",\\n  \"function aggregate3(Call3[] calldata calls) public payable returns (Result[] memory returnData)\",\\n  \"function aggregate3Value(Call3Value[] calldata calls) public payable returns (Result[] memory returnData)\",\\n  \"function blockAndAggregate(Call[] calldata calls) public payable returns (uint256 blockNumber, bytes32 blockHash, Result[] memory returnData)\",\\n  \"function getBasefee() view returns (uint256 basefee)\",\\n  \"function getBlockHash(uint256 blockNumber) view returns (bytes32 blockHash)\",\\n  \"function getBlockNumber() view returns (uint256 blockNumber)\",\\n  \"function getChainId() view returns (uint256 chainid)\",\\n  \"function getCurrentBlockCoinbase() view returns (address coinbase)\",\\n  \"function getCurrentBlockDifficulty() view returns (uint256 difficulty)\",\\n  \"function getCurrentBlockGasLimit() view returns (uint256 gaslimit)\",\\n  \"function getCurrentBlockTimestamp() view returns (uint256 timestamp)\",\\n  \"function getEthBalance(address addr) view returns (uint256 balance)\",\\n  \"function getLastBlockHash() view returns (bytes32 blockHash)\",\\n  \"function tryAggregate(bool requireSuccess, Call[] calldata calls) public payable returns (Result[] memory returnData)\",\\n  \"function tryBlockAndAggregate(bool requireSuccess, Call[] calldata calls) public payable returns (uint256 blockNumber, bytes32 blockHash, Result[] memory returnData)\",\\n] as const';\nconst MULTICALL_ABI_ETHERS = '[\\n  \"function aggregate(tuple(address target, bytes callData)[] calls) payable returns (uint256 blockNumber, bytes[] returnData)\",\\n  \"function aggregate3(tuple(address target, bool allowFailure, bytes callData)[] calls) payable returns (tuple(bool success, bytes returnData)[] returnData)\",\\n  \"function aggregate3Value(tuple(address target, bool allowFailure, uint256 value, bytes callData)[] calls) payable returns (tuple(bool success, bytes returnData)[] returnData)\",\\n  \"function blockAndAggregate(tuple(address target, bytes callData)[] calls) payable returns (uint256 blockNumber, bytes32 blockHash, tuple(bool success, bytes returnData)[] returnData)\",\\n  \"function getBasefee() view returns (uint256 basefee)\",\\n  \"function getBlockHash(uint256 blockNumber) view returns (bytes32 blockHash)\",\\n  \"function getBlockNumber() view returns (uint256 blockNumber)\",\\n  \"function getChainId() view returns (uint256 chainid)\",\\n  \"function getCurrentBlockCoinbase() view returns (address coinbase)\",\\n  \"function getCurrentBlockDifficulty() view returns (uint256 difficulty)\",\\n  \"function getCurrentBlockGasLimit() view returns (uint256 gaslimit)\",\\n  \"function getCurrentBlockTimestamp() view returns (uint256 timestamp)\",\\n  \"function getEthBalance(address addr) view returns (uint256 balance)\",\\n  \"function getLastBlockHash() view returns (bytes32 blockHash)\",\\n  \"function tryAggregate(bool requireSuccess, tuple(address target, bytes callData)[] calls) payable returns (tuple(bool success, bytes returnData)[] returnData)\",\\n  \"function tryBlockAndAggregate(bool requireSuccess, tuple(address target, bytes callData)[] calls) payable returns (uint256 blockNumber, bytes32 blockHash, tuple(bool success, bytes returnData)[] returnData)\",\\n]';\nconst MULTICALL_SOLIDITY_INTERFACE = \"// SPDX-License-Identifier: MIT\\npragma solidity >=0.5.0;\\npragma experimental ABIEncoderV2;\\n\\ninterface IMulticall3 {\\n  struct Call {\\n    address target;\\n    bytes callData;\\n  }\\n\\n  struct Call3 {\\n    address target;\\n    bool allowFailure;\\n    bytes callData;\\n  }\\n\\n  struct Call3Value {\\n    address target;\\n    bool allowFailure;\\n    uint256 value;\\n    bytes callData;\\n  }\\n\\n  struct Result {\\n    bool success;\\n    bytes returnData;\\n  }\\n\\n  function aggregate(Call[] calldata calls)\\n    external\\n    payable\\n    returns (uint256 blockNumber, bytes[] memory returnData);\\n\\n  function aggregate3(Call3[] calldata calls) external payable returns (Result[] memory returnData);\\n\\n  function aggregate3Value(Call3Value[] calldata calls)\\n    external\\n    payable\\n    returns (Result[] memory returnData);\\n\\n  function blockAndAggregate(Call[] calldata calls)\\n    external\\n    payable\\n    returns (uint256 blockNumber, bytes32 blockHash, Result[] memory returnData);\\n\\n  function getBasefee() external view returns (uint256 basefee);\\n\\n  function getBlockHash(uint256 blockNumber) external view returns (bytes32 blockHash);\\n\\n  function getBlockNumber() external view returns (uint256 blockNumber);\\n\\n  function getChainId() external view returns (uint256 chainid);\\n\\n  function getCurrentBlockCoinbase() external view returns (address coinbase);\\n\\n  function getCurrentBlockDifficulty() external view returns (uint256 difficulty);\\n\\n  function getCurrentBlockGasLimit() external view returns (uint256 gaslimit);\\n\\n  function getCurrentBlockTimestamp() external view returns (uint256 timestamp);\\n\\n  function getEthBalance(address addr) external view returns (uint256 balance);\\n\\n  function getLastBlockHash() external view returns (bytes32 blockHash);\\n\\n  function tryAggregate(bool requireSuccess, Call[] calldata calls)\\n    external\\n    payable\\n    returns (Result[] memory returnData);\\n\\n  function tryBlockAndAggregate(bool requireSuccess, Call[] calldata calls)\\n    external\\n    payable\\n    returns (uint256 blockNumber, bytes32 blockHash, Result[] memory returnData);\\n}\\n\";\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/lib/constants.ts\n"));

/***/ })

});